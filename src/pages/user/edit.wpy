<template>
    <view class="container">
        <view class="page-body">
            <view class="page__bd">
                <view class="zan-panel">
                    <navigator class="zan-cell zan-cell--access" url="/pages/user/me?name={{ user.name }}">
                        <view class="zan-cell__bd">
                            个人主页
                        </view>
                        <view class="zan-c-gray-darker">
                            <image class="avatar" src="{{ image_url + user.avatar }}"></image>
                        </view>
                        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                    </navigator>
                    <navigator class="zan-cell zan-cell--access" url="/pages/user/edit_name">
                        <view class="zan-cell__bd">
                            我的昵称
                        </view>
                        <view class="zan-c-gray-darker">{{ user.name }}</view>
                        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                    </navigator>
                    <navigator class="zan-cell zan-cell--access" url="/pages/user/edit_email">
                        <view class="zan-cell__bd">
                            我的邮箱
                        </view>
                        <view class="zan-c-gray-darker">{{ user.email }}</view>
                        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                    </navigator>
                </view>
                <view class="zan-panel-title">其它杂项</view>
                <view class="zan-panel">
                    <navigator class="zan-cell zan-cell--access" url="/pages/user/edit_description">
                        <view class="zan-cell__bd">
                            个性签名
                        </view>
                        <view class="zan-c-gray-darker">{{ user.description ? user.description : '' }}</view>
                        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                    </navigator>
                    <navigator class="zan-cell zan-cell--access" url="/pages/user/edit_github">
                        <view class="zan-cell__bd">
                            我的GitHub
                        </view>
                        <view class="zan-c-gray-darker">{{ user.github_name ? user.github_name : '' }}</view>
                        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                    </navigator>
                    <navigator class="zan-cell zan-cell--access" url="/pages/user/edit_website">
                        <view class="zan-cell__bd">
                            我的个人网站
                        </view>
                        <view class="zan-c-gray-darker">{{ user.website ? user.website : '' }}</view>
                        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                    </navigator>
                </view>
                <view class="weui-btn-area" style="margin-top: 30px">
                    <button class="zan-btn zan-btn--red" @tap="logout">退出登录</button>
                </view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import api from '@/utils/api'
    import {imageUrl} from "../../utils/image";

    export default class Edit extends wepy.page {
        config = {
            navigationBarTitleText: '个人信息',
        }
        data = {
            user : null,
            image_url : ''
        }
        // 获取用户数据
        async getUser(name){
            try {
                let userResponse = await api.request({
                    url: 'users/' + name,
                    header: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                this.user = userResponse.data.data
                this.$apply()
            } catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        }
        async onShow() {
            this.image_url = imageUrl
            // 获取当前用户信息
            let user = await this.$parent.getCurrentUser()
            console.log(JSON.stringify(user));
            this.getUser(user.name)
            this.$apply()
        }
        methods = {
            // 退出
            async logout (e) {
                try {
                    let logoutResponse = await api.logout()

                    // 退出成功清除信息
                    if (logoutResponse.statusCode === 204) {
                        wepy.showToast({
                            title: '退出登录成功',
                            icon: 'success'
                        })
                        this.user = null
                        // 跳转到我的页面
                        setTimeout(function() {
                            wepy.switchTab({
                                url: '/pages/user/index'
                            })
                        }, 2000)
                    }
                } catch (err) {
                    console.log(err)
                    wepy.showModal({
                        title: '提示',
                        content: '服务器错误，请联系管理员'
                    })
                }
            }
        }
    }
</script>

<style>
    .container{
        padding: 0;
    }
    .avatar {
       width:50px;
        height:50px;
        border-radius:10%;
        margin-right:10px;

    }

</style>
