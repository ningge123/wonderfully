<template>
    <view class="container">
        <view class="page-body">
            <view class="page-body-user" wx:if="{{ user.avatar }}">
                <image wx:if="user.id == auth_user.id" @tap="updateBg" class="user_bg" mode="aspectFill" src="{{ image_url + (user.wx_bg ? user.wx_bg : user.avatar) }}"></image>
                <image wx:else class="user_bg" mode="aspectFill" src="{{ image_url + (user.wx_bg ? user.wx_bg : user.avatar) }}"></image>
                <view class="weui-cell__hd user_avatar">
                    <image wx:if="user.id == auth_user.id" @tap="updateAvatar" class="avatar" src="{{ image_url + user.avatar }}"/>
                    <image wx:else class="avatar" src="{{ image_url + user.avatar }}"/>
                </view>
            </view>
            <view style="text-align: center">
                <view class="weui-cell__bd" style="height: 100%">
                    <view class="zan-font-16 zan-font-bold" wx:if="{{ user.name }}">{{ user.name }}</view>
                    <view class="zan-c-gray-dark introduction" wx:if="{{ user.description }}">{{ user.description }}</view>
                    <view wx:if="{{ auth_user }}">
                        <view wx:if="{{ user.id != auth_user.id  }}">
                            <view class="zan-font-bold" wx:if="{{ !user.is_following }}">
                                <button @tap="followUser" class="zan-btn zan-btn--mini zan-btn--danger zan-btn--plain button-hover">关注</button>
                            </view>
                            <view class="zan-font-bold" wx:else>
                                <button class="zan-btn zan-btn--mini zan-btn--danger zan-btn--plain button-hover">关注中</button>
                            </view>
                        </view>
                    </view>
                    <view wx:else>
                        <navigator url="/pages/auth/login" hover-class="navigator-hover">
                            <view class="zan-font-bold">
                                <button class="zan-btn zan-btn--mini zan-btn--danger zan-btn--plain button-hover">关注</button>
                            </view>
                        </navigator>
                    </view>
                </view>
            </view>
            <view class="page-body-detail">
                <view class="page-block-label">
                    <view class="zan-c-gray page-body-pd">邮箱地址</view>
                    <view class="zan-c-gray page-body-pd">GitHub昵称</view>
                    <view class="zan-c-gray page-body-pd">微博地址</view>
                    <view class="zan-c-gray page-body-pd">个人网站</view>
                </view>
                <view class="page-box">
                    <view class="page-body-pd">{{ user.email }}</view>
                    <view class="page-body-pd">{{ user.github_name ? user.github_name : '暂无' }}</view>
                    <view class="page-body-pd">{{ user.weibo_link ? user.weibo_link : '暂无' }}</view>
                    <view class="page-body-pd">{{ user.website ? user.website : '暂无' }}</view>
                </view>
                <navigator url="/pages/user/edit" hover-class="navigator-hover" wx:if="{{user.id == auth_user.id}}">
                    <view  class="zan-font-12 zan-icon zan-icon-edit zan-c-blue"> 编辑个人资料</view>
                </navigator>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import api from '@/utils/api'
    import {imageUrl} from "../../utils/image";

    export default class Me extends wepy.page {
        config = {
            navigationStyle: 'custom',
        }
        data = {
            // 用户信息
            user: null,
            image_url : '',
            auth_user: null
        }
        async followUser() {
            try {
                let userResponse = await api.request({
                    url: 'users/' + this.user.id + '/follow',
                    method: 'POST',
                    header: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                if (userResponse.statusCode === 201) {
                    this.user.is_following = ! this.user.is_following;
                    this.$apply()
                }
            }catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        } catch (err) {
            console.log(err)
            wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
            })
        }
        async updateAvatar () {
            // 选择头像图片
            let image = await wepy.chooseImage({count: 1})

            try {
                // 获取选择的图片
                let avatar = image.tempFilePaths[0]

                // 调用上传图片接口
                let imageResponse = await api.updateFile({
                    url: 'users/' + this.auth_user.name + '/wx_avatar',
                    method: 'POST',
                    name: 'image',
                    formData: {
                        type: 'avatar'
                    },
                    header: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    filePath: avatar
                })

                // 上传成功成功记录数据
                if (imageResponse.statusCode === 200) {
                    // 小程序上传结果没有做 JSON.parse，需要手动处理
                    let responseData = JSON.parse(imageResponse.data)
                    this.user.avatar = responseData.relative_url
                    this.auth_user.avatar = responseData.relative_url
                    wepy.setStorageSync('user', this.auth_user)
                    this.$apply()
                }
            } catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        }
        async updateBg () {
            // 选择头像图片
            let image = await wepy.chooseImage({count: 1})

            try {
                // 获取选择的图片
                let avatar = image.tempFilePaths[0]

                // 调用上传图片接口
                let imageResponse = await api.updateFile({
                    url: 'users/' + this.auth_user.name + '/wx_avatar',
                    method: 'POST',
                    name: 'image',
                    formData: {
                        type: 'wx_bg'
                    },
                    header: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    filePath: avatar
                })

                // 上传成功成功记录数据
                if (imageResponse.statusCode === 200) {
                    // 小程序上传结果没有做 JSON.parse，需要手动处理
                    let responseData = JSON.parse(imageResponse.data)
                    this.auth_user.wx_bg = responseData.relative_url
                    this.user.wx_bg = responseData.relative_url
                    wepy.setStorageSync('user', this.auth_user)
                    this.$apply()
                }
            } catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        }
        methods = {
            bindCommentMessageInput(e) {
                this.message = e.detail.value
            }
        }
        async onLoad(options) {
            this.image_url = imageUrl
            // 获取当前用户信息
            this.auth_user = await this.$parent.getCurrentUser()
            try {
                let userResponse = await api.request({
                    url: 'users/' + options.name,
                    header: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                this.user = userResponse.data.data
                this.$apply()
                // 动态设置页面标题
                wepy.setNavigationBarTitle({
                    title: this.user.name + ' 的主页'
                })
            } catch (err) {
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        }
    }
</script>

<style>
    .container{
        padding: 0;
        background-color: #fff;
    }
    .zan-panel{
        margin-top: 0;
    }

    .user_bg{
        padding: 0;
        width:100%;
        height:344rpx;
        position: relative;
    }

    .avatar {
        width: 70px;
        height: 70px;
        border-radius: 10%;
        margin-right: 10px;
    }
    .weui-cell__bd{
        height: 50px;
    }
    .introduction {
        padding: 10px 0;
    }
    .name{
        color:#fff;
    }
    .zan-cell-pd{
        padding-top: 55px;
    }
    .page-body-user{
        height: 400rpx;
        position: relative;
        text-align: center;
    }
    .page-body-detail{
        padding: 20px;
    }
    .user_avatar{
        position:absolute;
        bottom:1px;
        width:100%;
    }
    .page-block{
        display: inline-block;
    }
    .page-block-label{
        text-align: left;
        float: left;
        vertical-align: middle;
        box-sizing: border-box;
        margin-right:121rpx;

    }
    .page-body-pd{
        padding: 10px 0;
    }
</style>

